Teste, Verificação e Validação de Software Código: EIC0113     Sigla: TVVS Áreas Científicas Classificação Área Científica OFICIAL Engenharia de Software Ocorrência: 2015/2016 - 1S Ativa? Sim Página Web: http://moodle.up.pt/ Unidade Responsável: Departamento de Engenharia Informática Ciclos de Estudo/Cursos Sigla Nº de Estudantes Plano de Estudos Anos Curriculares Créditos UCN Créditos ECTS Horas de Contacto Horas Totais MIEIC 22 Plano de estudos a partir de 2009/10 5 - 6 42 162 - 3 - - - 6 42 162 Docência - Horas Teórico-Práticas: 3,00 Tipo Docente Turmas Horas Teórico-Práticas Totais 1 3,00 Ana Cristina Ramada Paiva 3,00 A ficha foi alterada no dia 2015-08-31. Campos alterados: Componentes de Avaliação e Ocupação, Lingua de trabalho Língua de trabalhoInglês Objetivos Familiarização com a terminologia usada em teste de software. Conhecer e saber aplicar as técnicas principais de teste para controlo de qualidade de software. Resultados de aprendizagem e competências No final da unidade curricular os estudantes deverão conhecer os conceitos de teste de software, as técnicas de conceção de casos de teste e quando as usar, e conhecer e saber aplicar as diferentes ferramentas de teste de software existentes. Modo de trabalhoPresencial Programa 1. Conceitos básicos de qualidade de software: noção de qualidade; atributos e métricas de qualidade segundo a norma ISO 9126; fatores de qualidade; custos de qualidade; verificação e validação versus garantia de qualidade. 2. Teste de software: conceitos básicos e definições; técnicas de conceção de casos de teste (testes de caixa negra e de caixa branca); testes unitários e "test-driven development"; testes de integração; testes de sistema (teste através da interface para o utilizador, teste de desempenho, fiabilidade, disponibilidade, compatibilidade, etc.); teste baseado em modelos; testes de aceitação; planeamento e documentação de testes; reporte e seguimento de problemas; métricas relacionadas com testes; gestão do processo de testes; automatização dos testes. 3. Inspeções, revisões e outras técnicas de análise estática de software. Bibliografia ObrigatóriaBurnstein, Ilene; Practical software testing. ISBN: 0-387-95131-8 Mathur, Aditya P.; Foundations of software testing. ISBN: 81-317-1660-0 Bibliografia ComplementarKent Beck; Test Driven Development: By Example. ISBN: 978-0321146533 Rick Mugridge, Ward Cunningham; Fit for Developing Software: Framework for Integrated Tests, Prentice Hall, 2005. ISBN: 978-0321269348 Utting, Mark; Practical Model-Based Testing. ISBN: 978-0-12-372501-1 Métodos de ensino e atividades de aprendizagem As aulas teóricas são usadas para exposição formal da matéria, acompanhada da apresentação de casos e sua discussão. Nas aulas laboratoriais, os alunos terão a oportunidade de realizar pequenos projetos e realizar um trabalho de exploração de ferramentas de teste. Este trabalho será dividido em duas fases: na primeira fase, os alunos terão que preparar a apresentação de uma ferramenta de teste e elaborar um exercício prático de utilização; na segunda fase, os alunos terão que produzir um relatório com um levantamento e comparação de ferramentas de teste de um determinado tipo. SoftwareTestMaker websecurify Vienna JUnit / NUnit / TestNG Hudson Jester WebTst RATS SpecExplorer (VS2010) Palavras ChaveCiências Tecnológicas > Tecnologia > Tecnologia de computadores > Tecnologia de software Ciências Tecnológicas > Engenharia > Engenharia de computadores Tipo de avaliaçãoAvaliação distribuída com exame final Componentes de Avaliação Designação Peso (%) Exame 50,00 Trabalho de campo 25,00 Trabalho laboratorial 25,00 Total: 100,00 Componentes de Ocupação Designação Tempo (Horas) Estudo autónomo 50,00 Frequência das aulas 42,00 Trabalho de investigação 50,00 Trabalho laboratorial 20,00 Total: 162,00 Obtenção de frequência Nota mínima de 50% na avaliação de frequência. Fórmula de cálculo da classificação final (E) Exame final com peso de 50%. Nota mínima de 45% no exame. Trabalhos práticos com peso de 50%: - (A) aula prática: 25%; - (P) trabalho de pesquisa: 25%. Classificação Final = (E)*50% + (A)*25% + (P)*25% Nota: em todo o caso, a classificação final não pode exceder em mais de 3 valores a classificação do exame arredondada para o inteiro mais próximo. Avaliação especial (TE, DA, ...) Os trabalhos são obrigatórios para todos os alunos, mesmo para os alunos dispensados de frequência às aulas. Melhoria de classificação A classificação do exame pode ser melhorada em exame de recurso. As classificações obtidas no trabalho prático podem ser melhoradas na edição seguinte da disciplina.
