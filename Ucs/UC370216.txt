Introdução à Programação Código: MM0061     Sigla: IPROG Áreas Científicas Classificação Área Científica OFICIAL Tecnologia da Comunicação Ocorrência: 2015/2016 - 1S Ativa? Sim Unidade Responsável: Departamento de Engenharia Informática Ciclos de Estudo/Cursos Sigla Nº de Estudantes Plano de Estudos Anos Curriculares Créditos UCN Créditos ECTS Horas de Contacto Horas Totais MM 18 Plano de estudos oficial 1 - 6 45 162 2 Docência - Responsabilidades Docente Responsabilidade Luís Filipe Pinto de Almeida Teixeira Regente Docência - Horas Teórico-Práticas: 3,00 Tipo Docente Turmas Horas Teórico-Práticas Totais 1 3,00 Luís Filipe Pinto de Almeida Teixeira 1,50 Língua de trabalhoPortuguês - Suitable for English-speaking students Objetivos Adquirir os conhecimentos essenciais de programação, usando como linguagem de suporte o Python. Resultados de aprendizagem e competências No final desta unidade curricular os alunos devem ser capazes de:  * Conhecer os conceitos fundamentais de programação  * Conceber programas de computador simples  * Concretizar programas em linguagens de programação Python Modo de trabalhoPresencial Programa  * Conceitos base de programação  * Variáveis, tipos de dados e operações  * Estruturas de controlo  * Funções  * Strings, listas, dicionários  * Ficheiros  * Recursividade  * Programação imperativa vs. orientada a objetos  * Classes, herança, polimorfismo  * Estruturas de dados (listas ligadas, tabelas de dispersão, árvores)  * Introdução à análise de algoritmos Bibliografia ObrigatóriaHow to Think Like a Computer Scientist: Learning with Python 3ed; Peter Wentworth, Jeffrey Elkner, Allen B. Downey, and Chris Meyers, 2012 (disponível online em: http://www.openbookproject.net/thinkcs/python/english3e/) Bibliografia ComplementarMark Lutz, David Ascher; Learning Python. ISBN: 978-0-596-00281-7 John C. Lusth; The Art and Craft of Programming - Python Edition, 2011 (disponível online em: http://beastie.cs.ua.edu/cs150/book/index.html) Al Sweigart; Making Games with Python & Pygame, CreateSpace Independent Publishing Platform, 2012. ISBN: 978-1469901732 (disponível online em: http://inventwithpython.com/pygame/chapters/) Métodos de ensino e atividades de aprendizagem Exposição teórica dos conceitos fundamentais e suas aplicações. Apresentação de exemplos práticos e resolução pelos estudantes de exercícios propostos. Execução de projetos onde os conhecimentos adquiridos são aplicados. SoftwarePython Palavras ChaveCiências Físicas > Ciência de computadores > Programação Tipo de avaliaçãoAvaliação distribuída com exame final Componentes de Avaliação Designação Peso (%) Exame 40,00 Trabalho laboratorial 60,00 Total: 100,00 Componentes de Ocupação Designação Tempo (Horas) Elaboração de projeto 60,00 Estudo autónomo 60,00 Frequência das aulas 42,00 Total: 162,00 Obtenção de frequência Terão frequência os estudantes que não ultrapassem o limite de faltas (25% do número de aulas práticas previstas) e obtenham pelo menos 50% da nota de frequência máxima estipulada - AD na fórmula de cálculo da classificação final. Fórmula de cálculo da classificação final Classificação Final = 0,6 AD + 0,4 EX onde: AD = 1/3 TP1 + 2/3 TP2 AD - Avaliação Distribuída EX - Exame final TP1 - Trabalho prático 1 TP2 - Trabalho prático 2 Os estudantes deverão ter ainda um mínimo de 40% na componente de exame final (EX). Provas e trabalhos especiais Não aplicável. Avaliação especial (TE, DA, ...) Idêntica à dos estudantes em regime normal. Os alunos inscritos nestas situações especiais, terão de realizar os mesmos trabalhos e no mesmo período dos estudantes em regime normal. Melhoria de classificação A nota de exame pode ser melhorada em época de recurso. A nota da avaliação distribuída poderá ser melhorada na edição seguinte da unidade curricular
