Teoria da Computação Código: EIC0022     Sigla: TCOM Áreas Científicas Classificação Área Científica OFICIAL Fundamentos da Programação Ocorrência: 2015/2016 - 1S Ativa? Sim Página Web: https://moodle.up.pt/course/view.php?id=1178 Unidade Responsável: Departamento de Engenharia Informática Ciclos de Estudo/Cursos Sigla Nº de Estudantes Plano de Estudos Anos Curriculares Créditos UCN Créditos ECTS Horas de Contacto Horas Totais MIEIC 188 Plano de estudos a partir de 2009/10 2 - 6 56 162 Docência - Horas Teóricas: 2,00 Teórico-Práticas: 2,00 Tipo Docente Turmas Horas Teóricas Totais 1 2,00 João Manuel Paiva Cardoso 2,00 Teórico-Práticas Totais 6 12,00 Daniel Augusto Gama de Castro Silva 4,00 João Manuel Paiva Cardoso 8,00 Língua de trabalhoPortuguês - Suitable for English-speaking students Objetivos Preparar os estudantes em tópicos relacionados com teoria da computação, com um ênfase especial em tópicos relacionados com linguagens formais. Munir os estudantes dos conhecimentos necessários que lhes permitam utilizar corretamente  linguagens regulares, expressões regulares, linguagens não-regulares, autómatos finitos deterministas e não-deterministas, linguagens e gramáticas livres de contexto, autómatos de pilha, e Máquinas de Turing. Capacitar os estudantes para que estes sejam capazes de expressar problemas computacionais usando linguagens formais, autómatos e máquinas de Turing. Capacitar os estudantes de métodos para formalizar problemas computationais relacionados com linguagens e para provar afirmações relacionadas com esses problemas. Resultados de aprendizagem e competências Ao completar a unidade curricular, espera-se que os estudantes sejam capazes de: - Nomear as contribuições significativas para a teoria da computação e os seus protagonistas; - Identificar problemas tratáveis com autómatos finitos e exprimi-los com notação rigorosa; - Comparar os autómatos finitos deterministas, não-deterministas e as expressões regulares no reconhecimento das linguagens regulares; - Aplicar as propriedades das linguagens regulares em provas; - Identificar problemas que se podem tratar com gramáticas sem contexto e usar notação rigorosa para os descrever; - Comparar as gramáticas sem contexto e os autómatos de pilha no reconhecimento das linguagens sem contexto; - Exprimir problemas de computação com recurso ao modelo da máquina de Turing; - Relacionar os modelos de computação estudados com as suas aplicações na teoria da computabilidade e da complexidade. Modo de trabalhoPresencial Pré-requisitos (conhecimentos prévios) e co-requisitos (conhecimentos simultâneos)É recomendado que os estudantes tenham frequentado a unidade curricular de Matemática Discreta. Programa Teoria dos Autómatos; Autómatos Finitos; Expressões Regulares e Linguagens; Propriedades das Linguagens Regulares; Gramáticas e Linguagens Sem Contexto; Autómatos de Pilha; Propriedades das Linguagens Sem Contexto; Introdução às Máquinas de Turing. Bibliografia ObrigatóriaHopcroft, John E.; Introdução à teoria de autômatos, linguagens e computação. ISBN: 85-352-1072-5 Bibliografia ComplementarSipser, Michael; Introduction to the theory of computation. ISBN: 0-619-21764-2 Sudkamp, Thomas A.; Languages and Machines. ISBN: 0-201-15768-3 Métodos de ensino e atividades de aprendizagem As aulas teóricas são usadas para exposição formal da matéria, acompanhada da apresentação de exemplos, realização de exercícios e sua discussão. Nas aulas teórico-práticas são propostos exercícios de aplicação. São realizados dois mini-testes, senvivelmente a seis e doze semanas do início do semestre, com o objectivo de testar se os conceitos básicos estão a ser dominados pela generalidade dos alunos. O esforço previsto para além das aulas é de cerca de 4h semanais. SoftwareJFlap: JFLAP is software for experimenting with formal languages topics. (http://www.jflap.org/) Palavras ChaveCiências Físicas > Matemática > Matemática computacional Ciências Físicas > Ciência de computadores Tipo de avaliaçãoAvaliação distribuída com exame final Componentes de Avaliação Designação Peso (%) Exame 60,00 Participação presencial 0,00 Teste 40,00 Total: 100,00 Componentes de Ocupação Designação Tempo (Horas) Estudo autónomo 103,00 Frequência das aulas 59,00 Total: 162,00 Obtenção de frequência Avaliação distribuída (AD) não inferior a 7 valores, com nota de cada mini-teste (MT) não inferior a 6 valores, e um máximo de 3 faltas não justificadas (25%) nas aulas TP. Fórmula de cálculo da classificação final AD: Avaliação Distribuída constituída pelas componentes MT1 e MT2 = 0,5 MT1 + 0,5 MT2 (mín: 7 valores) MT1 e MT2: mini-testes 1 e 2, respetivamente (mín: 6 valores em cada MT) EF: exame final (mín: 7 valores) Nota = arredonda(0,4 AD + 0,6 EF). Provas e trabalhos especiais Não há provas nem trabalhos especiais. Avaliação especial (TE, DA, ...) Uma das possibilidades seguintes (à escolha do estudante): - Exame final - Exame final + mini-testes (MT) Melhoria de classificação A nota final da disciplina pode ser melhorada através de um exame de melhoria de classificação. Observações - Consideram-se pré-requisitos o domínio das matérias de Lógica e teoria de prova e conhecimentos de programação. - Os estudantes que tenham obtido frequência no ano lectivo anterior e não queiram repetir a frequência poderão utilizar a nota do MT obtida nesse ano lectivo. - A lingua oficial das aulas é o Português. No entanto, adimite-se que as aulas possam ser leccionadas em Inglês.
