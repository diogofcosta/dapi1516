Análise Numérica Código: EM0016     Sigla: AN Áreas Científicas Classificação Área Científica OFICIAL Matemática Ocorrência: 2015/2016 - 1S Ativa? Sim Página Web: http//moodle.up.pt Unidade Responsável: Secção de Matemática Ciclos de Estudo/Cursos Sigla Nº de Estudantes Plano de Estudos Anos Curriculares Créditos UCN Créditos ECTS Horas de Contacto Horas Totais MIEM 204 Plano de estudos oficial a partir de 2006/07 2 - 6 39 162 Docência - Responsabilidades Docente Responsabilidade Maria Filomena Guimarães Dias de Almeida Regente Docência - Horas Teóricas: 1,50 Teórico-Práticas: 1,50 Tipo Docente Turmas Horas Teóricas Totais 2 3,00 Maria Filomena Guimarães Dias de Almeida 3,00 Teórico-Práticas Totais 9 13,50 Isilda Viana Pereira da Silva 9,00 Maria Filomena Guimarães Dias de Almeida 4,50 Língua de trabalhoPortuguês - Suitable for English-speaking students Objetivos Gerais: Conhecer os métodos de resolução numérica mais aplicáveis e mais eficientes, para cada problema base de Análise Numérica, bem como as condições de aplicabilidade e teoremas de convergência destes métodos. Espera-se que executem testes de aplicação prática em computador, discutindo os resultados obtidos, e que através da programação de alguns desses métodos em Matlab, adquiram prática de programação numérica. Específicos: Para cada capítulo do programa os alunos devem ser capazes de listar as condições de aplicabilidade dos métodos e enunciar os respetivos teoremas de convergência; devem ser capazes de aplicar os métodos, fórmulas e algoritmos dados, a problemas concretos simples; devem ser capazes de descrever o funcionamento dos métodos dados, traduzi-los em algoritmos e subprogramas (Functions) em Matlab e testá-los sobre exemplos, comparando e analisando os resultados; devem ser capazes de explicar as demonstrações dos teoremas dados, e aplicar as técnicas ai descritas a outras situações relacionadas. Devem ser capazes de resolver problemas novos com as ferramentas numéricas dadas e comparar o desempenho de vários métodos numéricos quando á velocidade e fiabilidade. Resultados de aprendizagem e competências Para cada capítulo do programa os alunos devem ser capazes de listar as condições de aplicabilidade dos métodos e enunciar os respetivos teoremas de convergência; devem ser capazes de aplicar os métodos, fórmulas e algoritmos dados, a problemas concretos simples; devem ser capazes de descrever o funcionamento dos métodos dados, traduzi-los em algoritmos e subprogramas (Functions) em Matlab e testá-los sobre exemplos, comparando e analisando os resultados; devem ser capazes de explicar as demonstrações dos teoremas dados, e aplicar as técnicas ai descritas a outras situações relacionadas. Devem ser capazes de resolver problemas novos com as ferramentas numéricas dadas e comparar o desempenho de vários métodos numéricos quando á velocidade e fiabilidade. Modo de trabalhoPresencial Pré-requisitos (conhecimentos prévios) e co-requisitos (conhecimentos simultâneos) Precedências Os estudantes devem saber as matérias das unidades curriculares de Algebra Linear e Geometria Analítica, Análise Matemática I , II e III e de Programação de Computadores. Programa Cap. 1 Erros de arredondamento e sua propagação; possível instabilidade dos métodos numéricos; origem dos erros de arredondamento, sistemas de numeração em computadores: sistemas de vírgula fixa e flutuante. Cap. 2 Sistemas de equações lineares: método de eliminação de Gauss. Erros de arredondamento e possível instabilidade dos métodos numéricos; técnicas pivotagem. Resolução de sistemas triangulares. Sistemas tridiagonais. Fatorização LU. Aplicação ao cálculo de determinantes e da inversa de uma matriz. Métodos iterativos: Jacobi, Gauss-Seidel e SOR, teoremas de convergência. Definição de erro de truncatura, estimativa dos erros de truncatura dos métodos anteriores. Cap. 3 Aproximação polinomial no sentido dos mínimos quadrados; polinómios ortogonais. Sistemas de equações lineares sobredeterminados. Cap. 4 Equações não lineares: condições gerais para a resolução, critérios de paragem dos métodos iterativos; métodos de cálculo: bissecções, Newton, secante, iterativo simples (ponto fixo). Teoremas de convergência, estimativa e majoração dos erros de truncatura ordem de convergência. Cap. 5 Interpolação polinomial: diferenças divididas; métodos de Newton e de Lagrange; erro de interpolação. Cap. 6 Integração Numérica: fórmulas de Newton-Cotes (ex: Trapézios e Simpson); fórmulas compostas; erros de integração numérica. Quadratura de Gauss. Cap. 7 Equações diferenciais ordinárias: método de Euler para equações diferenciais de 1ª ordem. Métodos de Taylor. Ordem de um método de resolução de equações diferenciais de 1ª ordem. Métodos de Runge-Kutta de ordem 2 e de ordem 4. Trabalhos práticos feitos nas aulas, em computador (usando o sistema operativo WINDOWS ou UNIX e a linguagem MATLAB) Bibliografia ObrigatóriaCleve Moler; Numerical Computing with Matlab , SIAM , 2004 John Mathews; Kurtis Fink ; ; Numerical Methods using Matlab , Prentice Hall , 1999 Maria Raquel Valença ; Métodos Numéricos , Livraria do Minho , 1993 Maria Raquel Valença ; Análise Numérica, Universidade Aberta Heitor Pina ; Métodos numéricos , McGraw Hill , 1995 Edite Fernandes; Computação Numérica, 1997. ISBN: ISBN: 972-96944-1-9 Bibliografia ComplementarRosário, Pedro ; Núnez, José ; Pienda, Júlio; Comprometer-se com o estudar na universidade : cartas do Gervásio ao seu umbigo, Livraria Almedina, 2006 Mário Graça, Pedro Lima ; Matemática Experimental , IST Press , 2006 . ISBN: ISBN: 972-8469-52-7 Observações Bibliográficas e-learning em http://moodle.up.pt Métodos de ensino e atividades de aprendizagem As exposições teóricas, apresentadas no quadro, mas também em ?Powerpoint?, são fortemente baseadas na Análise e Álgebra e são acompanhadas, sempre que possível, de exemplos práticos motivadores. São sugeridos outros exemplos, a testar em computador, para observarem o comportamento prático, que será explicado à luz da teoria aprendida. Nas aulas práticas os alunos realizam pequenos projetos orientados pelos professores, em salas equipadas com computadores e software adequado. Fora das aulas, os alunos desenvolverão projetos de programação de média complexidade em Matlab. SoftwareMatlab Tipo de avaliaçãoAvaliação distribuída com exame final Componentes de Avaliação Designação Peso (%) Exame 75,00 Participação presencial 0,00 Teste 25,00 Total: 100,00 Componentes de Ocupação Designação Tempo (Horas) Estudo autónomo 120,00 Frequência das aulas 42,00 Total: 162,00 Obtenção de frequência Estar regularmente inscrito, não ultrapassar o número de faltas previsto na lei. Têm ainda acesso a exame os alunos com estatutos especiais, por exemplo, estatuto de trabalhador estudante, militar, dirigente associativo, etc, e alunos que tenham tido frequência nesta UC num semestre dos dois anos letivos anteriores. Fórmula de cálculo da classificação final NT = média dos 2 minitestes, Nex = nota do exame, NF =nota final, NDO= nota depois da oral, Nprov=nota final provisória. Relativamente à nota do exame (Nex) existe uma nota mínima de 8 valores. Nprov=0,75xNEx+0,25xNT, Se Nprov <=16 então NF=Nprov senão NF=max(16, NDO)   O cálculo da classificação final na época de recurso é igual ao da época normal. Os minitestesteste não são passíveis de recurso, pois o seu objetivo é incentivar os alunos a irem acompanhando a matéria com estudo, desde o início. Mas os alunos podem optar  por que o exame conte 100% , se o fizerem antes do começo da época de exames, por escrito, em requerimento dirigido ao Professores da UC. Provas e trabalhos especiais Para classificação farão 2 minitestes na plataforma de e-learning Moodle, e um exame. O exame tem uma parte escrita e uma parte oral à qual só têm acesso aos alunos com mais de 16 valores na parte escrita. Avaliação especial (TE, DA, ...) Apenas exame final. Melhoria de classificação Apenas exame final. Observações e-learning em http://moodle.up.pt/
